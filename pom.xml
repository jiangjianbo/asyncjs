<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.asyncjs</groupId>
    <artifactId>asyncjs</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>js</packaging>

    <name>lightweight asynchronized javascript library</name>
    <url>http://www.asyncjs.org</url>

    <!-- 参考自 http://blog.akquinet.de/2011/02/11/mavenizing-javascript-projects -->
    
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <phantomjs.home>D:/tools/dev/test/phantomjs-1.7.0-windows</phantomjs.home>
    </properties>

    <build>
        <outputDirectory>target/scripts</outputDirectory>
        <testOutputDirectory>target/test-scripts</testOutputDirectory>
        
        <resources>
            <resource>
                <directory>src/main/js</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <extensions>
            <!-- 扩展maven，使其可以识别js类型 -->
            <extension>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>javascript-maven-plugin</artifactId>
                <version>2.0.0-alpha-1</version>
            </extension>
        </extensions>

        <plugins>
            <!--
            <plugin>
                < ! - - 在phantomjs环境中运行qunit, from https://code.google.com/p/phantomjs-qunit-runner? - - >
                <groupId>net.kennychua</groupId>
                <artifactId>phantomjs-qunit-runner</artifactId>
                <version>1.0.15</version>
                <configuration>
                    <jsSourceDirectory>src/main/js</jsSourceDirectory>
                    <jsTestDirectory>src/test/js</jsTestDirectory>
                    <ignoreFailures>false</ignoreFailures>
                    <phantomJsExec>${phantomjs.home}/phantomjs.exe</phantomJsExec>
                    < ! - - Optional - - >
                    < ! - -
                    <includeLibsInDir>
                        <directory>${js.libs.include.dir}</directory>
                        <includes>
                            <include>**/*.js</include>
                        </includes>
                    </includeLibsInDir>
                    - - >
                </configuration>
            </plugin>
            -->
            
            <plugin>
                <!-- 压缩混淆js文件, from http://mojo.codehaus.org/webminifier-maven-plugin/usage.html? -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>webminifier-maven-plugin</artifactId>
                <version>1.0.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>minify-js</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <jsCompressorType>YUI</jsCompressorType>
                    <jsSplitPoints>
                        <!-- html文件中每个property中name定义的js文件之前的js文件将被合并成value对于的名字 -->
                        <property>
                            <name>js/framework.js</name>
                            <value>myframeworkfilename</value>
                        </property>
                    </jsSplitPoints>
                    <yuiJSObfuscate>false</yuiJSObfuscate>
                </configuration>
            </plugin>
            
            <plugin>
                <!-- 检查js代码的规范，from http://mojo.codehaus.org/jslint-maven-plugin/index.html? -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jslint-maven-plugin</artifactId>
                <version>1.0.1</version>
                <configuration>
                    <allowOneVarStatementPerFunction>false</allowOneVarStatementPerFunction>
                    <failOnIssues>false</failOnIssues>
                    <!-- default maximumNumberOfErrors is 50 -->
                    <maximumNumberOfErrors>100</maximumNumberOfErrors>
                    <maximumLengthOfLine>200</maximumLengthOfLine>
                    <!-- 
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <sourceJsFolder>${basedir}/src/main/js</sourceJsFolder>
                    <workFolder>${project.build.directory}/JSLintMojo/main</workFolder>
                    -->
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>jslint</goal>
                            <goal>test-jslint</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <groupId>com.savage7.maven.plugins</groupId>
                <artifactId>maven-external-dependency-plugin</artifactId>
                <version>0.6-SNAPSHOT</version>
                <inherited>false</inherited>
                <configuration>
                    <stagingDirectory>${project.build.directory}/dependencies/</stagingDirectory>
                    <createChecksum>true</createChecksum>
                    <skipChecksumVerification>false</skipChecksumVerification>
                    <force>false</force>
                    <artifactItems>
                        <!-- 下载js库，参考https://developers.google.com/speed/libraries/devguide? -->
                        <artifactItem>
                            <groupId>org.jquery</groupId>
                            <artifactId>jquery</artifactId>
                            <version>1.8.2</version>
                            <packaging>js</packaging>
                            <downloadUrl>
                                http://ajax.googleapis.com/ajax/libs/{artifactId}/{version}/{artifactId}.{packaging}
                            </downloadUrl>
                            <!--
                            <install>true</install>
                            <force>false</force>
                            <extractFile>java-unrar/java-unrar-{version}.jar</extractFile>
                            -->
                        </artifactItem>
                    </artifactItems>
                </configuration>
                <executions>
                    <execution>
                        <id>clean-external-dependencies</id>
                        <phase>clean</phase>
                        <goals>
                            <!-- mvn com.savage7.maven.plugins:maven-external-dependency-plugin:clean-external -->
                            <goal>clean-external</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>resolve-install-external-dependencies</id>
                        <phase>process-resources</phase>
                        <goals>
                            <!-- mvn com.savage7.maven.plugins:maven-external-dependency-plugin:resolve-external -->
                            <goal>resolve-external</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <!-- 标准的resource插件，设置忽略pdf和swf -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
                        <nonFilteredFileExtension>swf</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>
                        
            <plugin>
                <!-- 生成jsdoc文档， from https://code.google.com/p/jsdoctk-plugin/ -->
                <groupId>nl.windgazer</groupId>
                <artifactId>jsdoctk-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <template>jsdoc</template> <!-- Alternatives are not pre-installed for version 2.x-->
                    <directory>${project.build.directory}/jsdoc</directory>
                    <recurse>5</recurse>
                    <ext>js</ext>
                    <allfunctions>true</allfunctions>
                    <Allfunctions>false</Allfunctions>
                    <privateOption>false</privateOption>
                    <!-- If you're using the maven default setup this alternative is sometimes required
                    to make the plugin work: ${basedir}/src/main/webapp/ -->
                    <srcDir>${basedir}/src/main/js</srcDir>
                    <exclude><!-- Since jsdoctk 2.3.2 -->
                        <!--
                        <param>regularexpression</param>
                        -->
                    </exclude>
                </configuration>
            </plugin>  

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <!-- 帮助把js测试脚本自动套用qunit的通用html -->
                        <id>qunit-html-generate</id>
                        <phase>generate-test-sources</phase>
                        <configuration>
                            <target>
                                <taskdef resource="net/sf/antcontrib/antcontrib.properties" />
                                <!-- 扫描src/test/js目录，寻找所有test*.js和*test.js的文件 -->
                                <!-- 扫描src/main/js目录，找到对应的*.js -->
                                <!-- 同时包含并生成test*.html文件到target/generated-test目录 -->
                                <for param="file">
                                    <path>
                                        <fileset dir="${basedir}/test/js" includes="**/test*.js,**/*test.js"/>
                                    </path>
                                    <sequential>
                                        <propertyregex property="fname" input="@{file}" regexp=".*/([Tt]est[\-_]?(.+)|(.*[^\-_]+)[\-_]?[Tt]est)\.js" replace="\2\3" override="yes" />
                                        <propertyregex property="fpath" input="@{file}" regexp="(.*/).+" replace="\1" override="yes" />
                                        <if>
                                            <available file="${basedir}/main/js/${fpath}/${fname}.js" />
                                            <then>
                                                <copy todir="${}">
                                                    <fileset dir="src_dir"/>
                                                    <filterset>
                                                        <filter token="TITLE" value="Foo Bar"/>
                                                    </filterset>
                                                </copy>                                                
                                            </then>
                                        </if>
                                    </sequential>
                                </for>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>ant-contrib</groupId>
                        <artifactId>ant-contrib</artifactId>
                        <version>1.0b3</version>
                        <exclusions>
                            <exclusion>
                                <groupId>ant</groupId>
                                <artifactId>ant</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant</artifactId>
                        <version>1.8.4</version>
                    </dependency>
                </dependencies>
            </plugin>


            <plugin>
                <!-- 报表模块 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.0-beta-3</version>
                <configuration>
                    <outputEncoding>UTF-8</outputEncoding>
                    <reportPlugins>
                        <plugin>
                            <!-- 产生 jslint和jsdoc的报表，from  -->
                            <groupId>gr.abiss.mvn.plugins</groupId>
                            <artifactId>maven-jstools-plugin</artifactId>
                            <version>0.7</version>
                            <configuration>
                                <jsDir>src/main/js</jsDir>
                                <includePrivate>true</includePrivate>
                                <includeUndocumented>true</includeUndocumented>
                            </configuration>
                            <reportSets>
                                <reportSet>
                                    <reports>
                                        <report>jslint</report>
                                        <report>jsdoc</report>
                                    </reports>
                                </reportSet>
                            </reportSets>
                        </plugin>
                    </reportPlugins>
                </configuration>
            </plugin>
                      
        </plugins>
        
    </build>

    <dependencies>
        <!--
        <dependency>
            <groupId>org.prototypejs</groupId>
            <artifactId>prototype</artifactId>
            <version>1.5.1.1</version>
            <type>js</type>
        </dependency>
        <dependency>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>qunit-amd</artifactId>
            <version>1.5.0-alpha-1</version>
            <type>js</type>
        </dependency>
        -->
    </dependencies>

    <repositories>
        <repository>
            <id>jsdoctk1</id>
            <url>http://jsdoctk-plugin.googlecode.com/svn/repo</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>jsdoctk2</id>
            <url>http://jsdoctk-plugin.googlecode.com/svn/repo</url>
        </pluginRepository>
        <!--
        <pluginRepository>
            <id>codehause1</id>
            <url>http://snapshots.repository.codehaus.org</url>
        </pluginRepository>
        -->
        <pluginRepository>
            <id>ossrh</id>
            <name>Sonatype OSS Repository</name>
            <url>http://oss.sonatype.org/content/groups/public</url>
            <layout>default</layout>
        </pluginRepository>
    </pluginRepositories>


</project>
