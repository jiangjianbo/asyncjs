<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.asyncjs</groupId>
    <artifactId>asyncjs</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>lightweight asynchronized javascript library</name>
    <url>http://www.asyncjs.org</url>

    <!-- 参考自 http://blog.akquinet.de/2011/02/11/mavenizing-javascript-projects -->
    
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <sourceDirectory>${basedir}/src/main/js</sourceDirectory>
        <testSourceDirectory>${basedir}/src/test/js</testSourceDirectory>

        <skipTests>true</skipTests>
        <maven.test.skip>true</maven.test.skip>
        <phantomjs.home>D:/tools/dev/test/phantomjs-1.7.0-windows</phantomjs.home>
    </properties>
    <build>
        <outputDirectory>target/scripts</outputDirectory>
        <testOutputDirectory>target/test-scripts</testOutputDirectory>

        <resources>
            <resource>
                <directory>${sourceDirectory}</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>

            <!-- 忽略java的单元测试 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.12.4</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>

            <plugin>
                <!-- 在phantomjs环境中运行qunit, from https://code.google.com/p/phantomjs-qunit-runner? -->
                <groupId>net.kennychua</groupId>
                <artifactId>phantomjs-qunit-runner</artifactId>
                <version>1.0.15</version>
                <configuration>
                    <jsSourceDirectory>${sourceDirectory}</jsSourceDirectory>
                    <jsTestDirectory>${testSourceDirectory}</jsTestDirectory>
                    <ignoreFailures>false</ignoreFailures>
                    <phantomJsExec>${phantomjs.home}/phantomjs.exe</phantomJsExec>
                    <!-- Optional -->
                    <!--
                    <includeLibsInDir>
                        <directory>${js.libs.include.dir}</directory>
                        <includes>
                            <include>**/*.js</include>
                        </includes>
                    </includeLibsInDir>
                    -->
                </configuration>
                <executions>
                    <execution>
                        <id>qunit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>generate-html </goal>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <!-- 检查js代码的规范，from http://mojo.codehaus.org/jslint-maven-plugin/index.html? -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jslint-maven-plugin</artifactId>
                <version>1.0.1</version>
                <configuration>
                    <allowOneVarStatementPerFunction>false</allowOneVarStatementPerFunction>
                    <failOnIssues>false</failOnIssues>
                    <!-- default maximumNumberOfErrors is 50 -->
                    <maximumNumberOfErrors>100</maximumNumberOfErrors>
                    <maximumLengthOfLine>200</maximumLengthOfLine>
                    <!-- 
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <sourceJsFolder>${basedir}/src/main/js</sourceJsFolder>
                    <workFolder>${project.build.directory}/JSLintMojo/main</workFolder>
                    -->
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>jslint</goal>
                            <goal>test-jslint</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <!-- 标准的resource插件，设置忽略pdf和swf -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
                        <nonFilteredFileExtension>swf</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <!-- 最小化 js -->
                        <id>min-js</id>
                        <phase>prepare-package</phase>
                        <configuration>
                            <target>
                                <taskdef name="jscomp" classname="com.google.javascript.jscomp.ant.CompileTask" />

                                <!-- compilationLevel="advanced|simple|whitespace" -->
                                <jscomp compilationLevel="simple" warning="verbose" debug="false"
                                        encoding="${project.build.sourceEncoding}" outputEncoding="${project.build.sourceEncoding}"
                                        output="${project.build.outputDirectory}/asyncjs-min.js">
                                    <!-- 外部依赖的文件列表 -->
                                    <!--
                                    <externs dir="${basedir}/src">
                                        <file name="extern.js"/>
                                    </externs>
                                    <path>
                                        <fileset dir="${sourceDirectory}">
                                            <file name="**/*.js"/>
                                        </fileset>
                                    </path>
                                    -->
                                    <sources dir="${project.build.outputDirectory}">
                                        <file name="asyncjs.js"/>
                                    </sources>
                                </jscomp>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>ant-contrib</groupId>
                        <artifactId>ant-contrib</artifactId>
                        <version>1.0b3</version>
                        <exclusions>
                            <exclusion>
                                <groupId>ant</groupId>
                                <artifactId>ant</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant</artifactId>
                        <version>1.8.4</version>
                    </dependency>
                    <dependency>
                        <groupId>com.google.javascript</groupId>
                        <artifactId>closure-compiler</artifactId>
                        <version>r2180</version>
                    </dependency>
                </dependencies>
            </plugin>


            <!--
            <plugin>
                <groupId>com.savage7.maven.plugins</groupId>
                <artifactId>maven-external-dependency-plugin</artifactId>
                <version>0.6-SNAPSHOT</version>
                <inherited>false</inherited>
                <configuration>
                    <stagingDirectory>${project.build.directory}/dependencies/</stagingDirectory>
                    <createChecksum>true</createChecksum>
                    <skipChecksumVerification>false</skipChecksumVerification>
                    <force>false</force>
                    <artifactItems>
                        <! -#- 下载js库，参考https://developers.google.com/speed/libraries/devguide?  -#->
                        <artifactItem>
                            <groupId>org.jquery</groupId>
                            <artifactId>qunit</artifactId>
                            <version>1.10.0</version>
                            <packaging>js</packaging>
                            <downloadUrl>
                                http://code.jquery.com/{artifactId}//{artifactId}-{version}.{packaging}
                            </downloadUrl>
                            <! -#-
                            <install>true</install>
                            <force>false</force>
                            <extractFile>java-unrar/java-unrar-{version}.jar</extractFile>
                             -#->
                        </artifactItem>
                        <artifactItem>
                            <groupId>org.jquery</groupId>
                            <artifactId>qunit</artifactId>
                            <version>1.10.0</version>
                            <packaging>css</packaging>
                            <downloadUrl>
                                http://code.jquery.com/{artifactId}/{artifactId}-{version}.{packaging}
                            </downloadUrl>
                        </artifactItem>
                    </artifactItems>
                </configuration>
                <executions>
                    <execution>
                        <id>clean-external-dependencies</id>
                        <phase>clean</phase>
                        <goals>
                            <! -#- mvn com.savage7.maven.plugins:maven-external-dependency-plugin:clean-external  -#->
                            <goal>clean-external</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>resolve-install-external-dependencies</id>
                        <phase>process-resources</phase>
                        <goals>
                            <! -#- mvn com.savage7.maven.plugins:maven-external-dependency-plugin:resolve-external  -#->
                            <goal>resolve-external</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <! -#- 帮助把js测试脚本自动套用qunit的通用html  -#->
                        <id>qunit-html-generate</id>
                        <phase>generate-test-sources</phase>
                        <configuration>
                            <target xmlns:ac="antlib:net.sf.antcontrib">
                                <taskdef resource="net/sf/antcontrib/antlib.xml" classpathref="maven.dependency.classpath" />
                                <! -#- 处理qunit的js和css到变量  -#->
                                <ac:for param="file">
                                    <path>
                                        <fileset dir="${project.build.directory}/dependencies/" includes="qunit*.*"/>
                                    </path>
                                    <sequential>
                                        <propertyregex property="fn" input="@{file}" regexp=".*[\\/](qunit[\-\_\.\d]+\.\w+)$" replace="\1" override="yes" />
                                        <propertyregex property="ff" input="@{file}" regexp=".*[\\/]qunit[\-\_\.\d]+\.(\w+)$" replace="\1" override="yes" />
                                        <ac:var name="qunit-${ff}" value="${fn}" />
                                    </sequential>
                                </ac:for>
                                <! -#- 扫描src/test/js目录，寻找所有test*.js和*test.js的文件  -#->
                                <! -#- 扫描src/main/js目录，找到对应的*.js  -#->
                                <! -#- 同时包含并生成test*.html文件到target/generated-test目录  -#->
                                <ac:for param="file">
                                    <path>
                                        <fileset dir="${basedir}/src/test/js" includes="**/test*.js,**/*test.js"/>
                                    </path>
                                    <sequential>
                                        <propertyregex property="fname" input="@{file}" regexp=".*[\\/]([Tt]est[\-_]?(.+)|(.*[^\-_]+)[\-_]?[Tt]est)\.js" replace="\2\3" override="yes" />
                                        <ac:if>
                                            <available file="${basedir}/src/main/js/${fname}.js" />
                                            <ac:then>
                                                <copy file="${basedir}/src/test/resources/qunit-template.html" tofile="${project.build.testOutputDirectory}/test-${fname}.html" overwrite="true" encoding="utf-8">
                                                    <filterset>
                                                        <filter token="js-name" value="${fname}"/>
                                                        <filter token="qunit-js" value="${qunit-js}"/>
                                                        <filter token="qunit-css" value="${qunit-css}"/>
                                                    </filterset>
                                                </copy>                                                
                                            </ac:then>
                                        </ac:if>
                                    </sequential>
                                </ac:for>
                                <copy todir="${project.build.testOutputDirectory}/qunit" encoding="utf-8">
                                    <fileset dir="${project.build.directory}/dependencies/" includes="qunit*.*" />
                                </copy>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>ant-contrib</groupId>
                        <artifactId>ant-contrib</artifactId>
                        <version>1.0b3</version>
                        <exclusions>
                            <exclusion>
                                <groupId>ant</groupId>
                                <artifactId>ant</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant</artifactId>
                        <version>1.8.4</version>
                    </dependency>
                </dependencies>
            </plugin>
            -->

            <plugin>
                <!-- 报表模块 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.0-beta-3</version>
                <configuration>
                    <outputEncoding>UTF-8</outputEncoding>
                    <reportPlugins>
                        <plugin>
                            <!-- 产生 jslint和jsdoc的报表，from  -->
                            <groupId>gr.abiss.mvn.plugins</groupId>
                            <artifactId>maven-jstools-plugin</artifactId>
                            <version>0.7</version>
                            <configuration>
                                <jsDir>src/main/js</jsDir>
                                <includePrivate>true</includePrivate>
                                <includeUndocumented>true</includeUndocumented>
                            </configuration>
                            <reportSets>
                                <reportSet>
                                    <reports>
                                        <report>jslint</report>
                                        <report>jsdoc</report>
                                    </reports>
                                </reportSet>
                            </reportSets>
                        </plugin>
                    </reportPlugins>
                </configuration>
            </plugin>
                      
        </plugins>
        
    </build>

    <dependencies>
        <!--
        <dependency>
            <groupId>org.prototypejs</groupId>
            <artifactId>prototype</artifactId>
            <version>1.5.1.1</version>
            <type>javascript</type>
        </dependency>
        <dependency>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>qunit-amd</artifactId>
            <version>1.5.0-alpha-1</version>
            <type>javascript</type>
        </dependency>
        -->
    </dependencies>

    <pluginRepositories>
        <pluginRepository>
            <id>ossrh</id>
            <name>Sonatype OSS Repository</name>
            <url>http://oss.sonatype.org/content/groups/public</url>
            <layout>default</layout>
        </pluginRepository>
    </pluginRepositories>


</project>
